# [1] Задача «Максимум»
"""Условие
Найдите индексы первого вхождения максимального элемента.
Выведите два числа: номер строки и номер столбца, в которых стоит наибольший элемент в двумерном массиве.
Если таких элементов несколько, то выводится тот, у которого меньше номер строки,
а если номера строк равны то тот, у которого меньше номер столбца.
Программа получает на вход размеры массива n и m, затем n строк по m чисел в каждой."""


def maximal():
    n, m = [int(i) for i in input().split()]
    a = [[int(i) for i in input().split()] for _ in range(n)]
    maximum = a[0][0]
    max_i, max_j = 0, 0
    for i in range(len(a)):
        for j in range(len(a[i])):
            if a[i][j] > maximum:
                maximum = a[i][j]
                max_i = i
                max_j = j
    print(max_i, max_j)


# [2] Задача «Снежинка»
"""Условие
Дано нечетное число n. 
Создайте двумерный массив из n×n элементов, заполнив его символами "." 
(каждый элемент массива является строкой из одного символа).
Затем заполните символами "*" среднюю строку массива, средний столбец массива, главную диагональ и побочную диагональ. 
В результате единицы в массиве должны образовывать изображение звездочки. 
Выведите полученный массив на экран, разделяя элементы массива пробелами."""


def snow():
    if (n := int(input())) > 0 and n % 2 == 1: [print(' '.join([str(elem) for elem in row])) for row in [[('*' if abs((n - 1) / 2 - i) == abs((n - 1) / 2 - j) or i == (n - 1) / 2 or j == (n - 1) / 2 else '.') for j in range(n)] for i in range(n)]]


# [3] Задача «Шахматная доска»
"""Условие
Даны два числа n и m. Создайте двумерный массив размером n×m и заполните его символами "." и "*" в шахматном порядке. 
В левом верхнем углу должна стоять точка.
"""


def chess():
    n, m = [int(i) for i in input().split()]
    a = [['.' if (i + j) % 2 == 0 else '*' for j in range(m)] for i in range(n)]
    for elem in a:
        print(' '.join(elem))


# [4] Задача «Диагонали, параллельные главной»
"""Условие
Дано число n. Создайте массив размером n×n и заполните его по следующему правилу. 
На главной диагонали должны быть записаны числа 0. 
На двух диагоналях, прилегающих к главной, числа 1. На следующих двух диагоналях числа 2, и т.д."""


def diagonals():
    n = int(input())
    a = [[str(abs(j - i)) for j in range(n)] for i in range(n)]
    for elem in a:
        print(' '.join(elem))


# [5] Задача «Побочная диагональ»
"""Условие
Дано число n. Создайте массив размером n×n и заполните его по следующему правилу:
Числа на диагонали, идущей из правого верхнего в левый нижний угол равны 1.
Числа, стоящие выше этой диагонали, равны 0.
Числа, стоящие ниже этой диагонали, равны 2.
Полученный массив выведите на экран. Числа в строке разделяйте одним пробелом."""


def secondary_diagonal():
    n = int(input())
    a = [['1' if n - i - 1 == j else '0' if j < (n - i) else '2' for j in range(n)] for i in range(n)]
    for elem in a:
        print(' '.join(elem))


# [6] Задача «Поменять столбцы»
"""Условие
Дан двумерный массив и два числа: i и j. Поменяйте в массиве столбцы с номерами i и j и выведите результат.
Программа получает на вход размеры массива n и m, затем элементы массива, затем числа i и j.
Решение оформите в виде функции swap_columns(a, i, j)."""


def change_columns():
    def swap_columns(a, x, y):
        for k in range(n):
            a[k][x], a[k][y] = a[k][y], a[k][x]

    n, m = [int(i) for i in input().split()]
    array = [input().split() for _ in range(n)]
    i, j = [int(i) for i in input().split()]
    swap_columns(array, i, j)
    for elem in array:
        print(' '.join(elem))

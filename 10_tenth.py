# [1] Задача «Количество различных чисел»
"""Условие
Дан список чисел. Определите, сколько в нем встречается различных чисел.

Примечание. Эту задачу на Питоне можно решить в одну строчку."""


def different_numbers():
    print(len(set(input().split())))


# [2] Задача «Количество совпадающих чисел»
"""Условие
Даны два списка чисел. Посчитайте, сколько чисел содержится одновременно как в первом списке, так и во втором.

Примечание. Эту задачу на Питоне можно решить в одну строчку."""


def num_of_equal():
    print(len(set(input().split()).intersection(set(input().split()))))


# [3] Задача «Пересечение множеств»
"""Условие
Даны два списка чисел. Найдите все числа, которые входят как в первый, так и во второй список и выведите их в порядке возрастания.

Примечание. И даже эту задачу на Питоне можно решить в одну строчку."""


def intersection_sets():
    print(*sorted({int(s) for s in input().split()} & {int(s) for s in input().split()}))


# [4] Задача «Встречалось ли число раньше»
"""Условие
Во входной строке записана последовательность чисел через пробел. 
Для каждого числа выведите слово YES (в отдельной строке), 
если это число ранее встречалось в последовательности или NO, если не встречалось."""


def is_earlier():
    s = [int(i) for i in input().split()]
    l = list(set(s))
    for elem in s:
        if elem in l:
            l.pop(0)
            print('NO')
        else:
            print('YES')


# [5] Задача «Кубики»
"""Условие
Аня и Боря любят играть в разноцветные кубики, 
причем у каждого из них свой набор и в каждом наборе все кубики различны по цвету. 
Однажды дети заинтересовались, сколько существуют цветов таких, что кубики каждого цвета присутствуют в обоих наборах. 
Для этого они занумеровали все цвета случайными числами от 0 до 108. На этом их энтузиазм иссяк, 
поэтому вам предлагается помочь им в оставшейся части.

В первой строке входных данных записаны числа N и M — число кубиков у Ани и Бори. 
В следующих N строках заданы номера цветов кубиков Ани. В последних M строках номера цветов Бори.

Найдите три множества: номера цветов кубиков, которые есть в обоих наборах; номера цветов кубиков, 
которые есть только у Ани и номера цветов кубиков, которые есть только у Бори. 
Для каждого из множеств выведите сначала количество элементов в нем, 
а затем сами элементы, отсортированные по возрастанию."""


def cubes():
    n, m = [int(s) for s in input().split()]
    ann, bor = set(), set()
    for _ in range(n):
        ann.add(int(input()))
    for _ in range(m):
        bor.add(int(input()))
    intersection = ann & bor
    bor = bor - intersection
    ann = ann - intersection
    print(len(intersection))
    print(*sorted(intersection))
    print(len(ann))
    print(*sorted(ann))
    print(len(bor))
    print(*sorted(bor))


# [6] Задача «Количество слов в тексте»
"""Условие
Дан текст: в первой строке записано число строк, далее идут сами строки. 
Определите, сколько различных слов содержится в этом тексте.

Словом считается последовательность непробельных символов идущих подряд, 
слова разделены одним или большим числом пробелов или символами конца строки."""


def words_number():
    s = set()
    for _ in range(int(input())):
        s |= {i for i in input().split()}
    print(len(s))


# [7] Задача «Угадай число»
"""Условие
Август и Беатриса играют в игру. Август загадал натуральное число от 1 до n. 
Беатриса пытается угадать это число, для этого она называет некоторые множества натуральных чисел. 
Август отвечает Беатрисе YES, если среди названных ей чисел есть задуманное или NO в противном случае. 
После нескольких заданныъх вопросов Беатриса запуталась в том, какие вопросы она задавала и какие ответы получила 
и просит вас помочь ей определить, какие числа мог задумать Август.

В первой строке задано n - максимальное число, которое мог загадать Август. 
Далее каждая строка содержит вопрос Беатрисы (множество чисел, разделенных пробелом) и ответ Августа на этот вопрос.

Вы должны вывести через пробел, в порядке возрастания, все числа, которые мог задумать Август."""


def guess_num():
    august = {i for i in range(1, int(input()) + 1)}
    while (word := input()) != 'HELP':
        answer = input()
        if answer == 'NO':
            a = {int(i) for i in word.split()}
            august -= a
        elif answer == 'YES':
            a = {int(i) for i in word.split()}
            august &= a
    print(*august)


# [8] Задача «Угадай число - 2»
"""Условие
Август и Беатриса продолжают играть в игру, но Август начал жульничать. 
На каждый из вопросов Беатрисы он выбирает такой вариант ответа YES или NO, 
чтобы множество возможных задуманных чисел оставалось как можно больше. Например, 
если Август задумал число от 1 до 5, а Беатриса спросила про числа 1 и 2, то Август ответит NO, 
а если Беатриса спросит про 1, 2, 3, то Август ответит YES.

Если же Бетриса в своем вопросе перечисляет ровно половину из задуманных чисел, 
то Август из вредности всегда отвечает NO. 
Наконец, Август при ответе учитывает все предыдущие вопросы Беатрисы и свои ответы на них, 
то есть множество возможных задуманных чисел уменьшается.

Первая строка содержит наибольшее число, которое мог загадать Август. 
Каждая следующая строка содержит очередной вопрос Беатрисы: набор чисел, разделенных пробелами. 
Последняя строка входных данных содержит одно слово HELP.

Для каждого вопроса Беатрисы выведите ответ Августа на этот вопрос. 
После этого выведите через пробел, в порядке возрастания, все числа, 
которые мог загадать Август после ответа на все вопросы Беатрисы."""


def guess_num_2():
    august = {i for i in range(1, int(input()) + 1)}
    while (num := input()) != 'HELP':
        a = {int(i) for i in num.split()}
        if len(august - a) >= len(august & a):
            august -= a
            print('NO')
        else:
            august &= a
            print('YES')
    print(*sorted(august))


# [9] Задача «Полиглоты»
"""Условие
Каждый из некоторого множества школьников некоторой школы знает некоторое количество языков. 
Нужно определить сколько языков знают все школьники, и сколько языков знает хотя бы один из школьников.

В первой строке задано количество школьников. 
Для каждого из школьников сперва записано количество языков, которое он знает, 
а затем - названия языков, по одному в строке.

В первой строке выведите количество языков, которые знают все школьники. 
Начиная со второй строки - список таких языков. 
Затем - количество языков, которые знает хотя бы один школьник, на следующих строках - список таких языков. 
Языки нужно выводить в лексикографическом порядке, по одному на строке."""


def polyglots():
    a, b = set(), set()
    for _ in range(int(input())):
        b.clear()
        for _ in range(int(input())):
            x = input()
            a.add(x)
            b.add(x)
        b &= a
    print(len(b), *sorted(b), len(a), *sorted(a), sep='\n')


# [10] Задача «Забастовки»
"""Условие
Политическая жизнь одной страны очень оживленная. 
В стране действует K политических партий, каждая из которых регулярно объявляет национальную забастовку. 
Дни, когда хотя бы одна из партий объявляет забастовку, при условии, 
что это не суббота или воскресенье (когда и так никто не работает), наносят большой ущерб экономике страны.

i-я партия объявляет забастовки строго каждые b_i дней, начиная с дня с номером a_i. 
То есть i-я партия объявляет забастовки в дни a_i, a_i + b_i, a_i + 2 * b_i и т.д. 
Если в какой-то день несколько партий объявляет забастовку, то это считается одной общенациональной забастовкой.

В календаре страны N дней, пронумерованных, начиная с единицы. 
Первый день года является понедельником, шестой и седьмой дни года — выходные, неделя состоит из семи дней.

В первой строке даны числа N и K. 
Далее идет K строк, описывающие графики проведения забастовок. i-я строка содержит числа a_i и b_i. 
Вам нужно определить число забастовок, произошедших в этой стране в течении года."""


def national_parties():
    n, k = [int(i) for i in input().split()]
    disappointment = set()
    for _ in range(k):
        a_i, b_i = [int(i) for i in input().split()]
        day = a_i
        # disappointment |= {day if (((day := (a_i + i * b_i)) + 1) % 7 != 0 and day % 7 != 0) else None for i in range(int((n - a_i) / b_i) + 1)}
        while day <= n:
            if (day + 1) % 7 != 0 and day % 7 != 0:
                disappointment.add(day)
            day += b_i
    print(len(disappointment))
    # print(len(disappointment) - 1)
    # Примечание: алгоритм в комментариях почему-то ломает сайт, хотя он [алгоритм] полностью работоспособен

